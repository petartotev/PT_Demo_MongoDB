{
	"info": {
		"_postman_id": "716d0341-7937-4780-8733-00d46e4400f9",
		"name": "PT_Demo_MongoDB",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23140527"
	},
	"item": [
		{
			"name": "Get All",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url-http-app}}/MongoDb",
					"host": [
						"{{url-http-app}}"
					],
					"path": [
						"MongoDb"
					]
				}
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url-http-app}}/MongoDb",
							"host": [
								"{{url-http-app}}"
							],
							"path": [
								"MongoDb"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Sun, 07 Jan 2024 18:31:04 GMT"
						},
						{
							"key": "Server",
							"value": "Kestrel"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": {\n            \"timestamp\": 1704652221,\n            \"machine\": 9768200,\n            \"pid\": -18030,\n            \"increment\": 5377729,\n            \"creationTime\": \"2024-01-07T18:30:21Z\"\n        },\n        \"studentId\": \"659aedbd950d08b992520ec1\",\n        \"firstName\": \"Petar\",\n        \"lastName\": \"Totev\",\n        \"age\": 34,\n        \"city\": \"Burgas\"\n    },\n    {\n        \"id\": {\n            \"timestamp\": 1704652221,\n            \"machine\": 9768200,\n            \"pid\": -18030,\n            \"increment\": 5377730,\n            \"creationTime\": \"2024-01-07T18:30:21Z\"\n        },\n        \"studentId\": \"659aedbd950d08b992520ec2\",\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"age\": 20,\n        \"city\": \"New York\"\n    },\n    {\n        \"id\": {\n            \"timestamp\": 1704652221,\n            \"machine\": 9768200,\n            \"pid\": -18030,\n            \"increment\": 5377731,\n            \"creationTime\": \"2024-01-07T18:30:21Z\"\n        },\n        \"studentId\": \"659aedbd950d08b992520ec3\",\n        \"firstName\": \"Iggy\",\n        \"lastName\": \"Pop\",\n        \"age\": 77,\n        \"city\": \"Los Angeles\"\n    }\n]"
				},
				{
					"name": "500 Internal Server Error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url-http-app}}/MongoDb",
							"host": [
								"{{url-http-app}}"
							],
							"path": [
								"MongoDb"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Sun, 07 Jan 2024 12:46:59 GMT"
						},
						{
							"key": "Server",
							"value": "Kestrel"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "System.FormatException: An error occurred while deserializing the Id property of class DemoMongoDb.API.Models.Student: Cannot deserialize a 'String' from BsonType 'ObjectId'.\r\n ---> System.FormatException: Cannot deserialize a 'String' from BsonType 'ObjectId'.\r\n   at MongoDB.Bson.Serialization.Serializers.StringSerializer.DeserializeValue(BsonDeserializationContext context, BsonDeserializationArgs args)\r\n   at MongoDB.Bson.Serialization.Serializers.SealedClassSerializerBase`1.Deserialize(BsonDeserializationContext context, BsonDeserializationArgs args)\r\n   at MongoDB.Bson.Serialization.Serializers.SerializerBase`1.MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(BsonDeserializationContext context, BsonDeserializationArgs args)\r\n   at MongoDB.Bson.Serialization.IBsonSerializerExtensions.Deserialize(IBsonSerializer serializer, BsonDeserializationContext context)\r\n   at MongoDB.Bson.Serialization.BsonClassMapSerializer`1.DeserializeMemberValue(BsonDeserializationContext context, BsonMemberMap memberMap)\r\n   --- End of inner exception stack trace ---\r\n   at MongoDB.Bson.Serialization.BsonClassMapSerializer`1.DeserializeMemberValue(BsonDeserializationContext context, BsonMemberMap memberMap)\r\n   at MongoDB.Bson.Serialization.BsonClassMapSerializer`1.DeserializeClass(BsonDeserializationContext context)\r\n   at MongoDB.Bson.Serialization.BsonClassMapSerializer`1.Deserialize(BsonDeserializationContext context, BsonDeserializationArgs args)\r\n   at MongoDB.Bson.Serialization.IBsonSerializerExtensions.Deserialize[TValue](IBsonSerializer`1 serializer, BsonDeserializationContext context)\r\n   at MongoDB.Driver.Core.Operations.CursorBatchDeserializationHelper.DeserializeBatch[TDocument](RawBsonArray batch, IBsonSerializer`1 documentSerializer, MessageEncoderSettings messageEncoderSettings)\r\n   at MongoDB.Driver.Core.Operations.FindOperation`1.CreateFirstCursorBatch(BsonDocument cursorDocument)\r\n   at MongoDB.Driver.Core.Operations.FindOperation`1.CreateCursor(IChannelSourceHandle channelSource, IChannelHandle channel, BsonDocument commandResult)\r\n   at MongoDB.Driver.Core.Operations.FindOperation`1.ExecuteAsync(RetryableReadContext context, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.Core.Operations.FindOperation`1.ExecuteAsync(IReadBinding binding, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.OperationExecutor.ExecuteReadOperationAsync[TResult](IReadBinding binding, IReadOperation`1 operation, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteReadOperationAsync[TResult](IClientSessionHandle session, IReadOperation`1 operation, ReadPreference readPreference, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.IAsyncCursorSourceExtensions.ToListAsync[TDocument](IAsyncCursorSource`1 source, CancellationToken cancellationToken)\r\n   at DemoMongoDb.API.Controllers.MongoDbController.Get()\r\n   at lambda_method13(Closure , Object )\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nConnection: keep-alive\r\nHost: localhost:7060\r\nUser-Agent: PostmanRuntime/7.36.0\r\nAccept-Encoding: gzip, deflate, br\r\nReferer: http://localhost:5225/MongoDb\r\nPostman-Token: 094ae293-aab2-4457-90f2-07402a5adcdb\r\n"
				},
				{
					"name": "500 Internal Server Error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url-http-app}}/MongoDb",
							"host": [
								"{{url-http-app}}"
							],
							"path": [
								"MongoDb"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Sun, 07 Jan 2024 12:51:03 GMT"
						},
						{
							"key": "Server",
							"value": "Kestrel"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "System.FormatException: Element 'Pop' does not match any field or property of class DemoMongoDb.API.Models.Student.\r\n   at MongoDB.Bson.Serialization.BsonClassMapSerializer`1.DeserializeClass(BsonDeserializationContext context)\r\n   at MongoDB.Bson.Serialization.BsonClassMapSerializer`1.Deserialize(BsonDeserializationContext context, BsonDeserializationArgs args)\r\n   at MongoDB.Bson.Serialization.IBsonSerializerExtensions.Deserialize[TValue](IBsonSerializer`1 serializer, BsonDeserializationContext context)\r\n   at MongoDB.Driver.Core.Operations.CursorBatchDeserializationHelper.DeserializeBatch[TDocument](RawBsonArray batch, IBsonSerializer`1 documentSerializer, MessageEncoderSettings messageEncoderSettings)\r\n   at MongoDB.Driver.Core.Operations.FindOperation`1.CreateFirstCursorBatch(BsonDocument cursorDocument)\r\n   at MongoDB.Driver.Core.Operations.FindOperation`1.CreateCursor(IChannelSourceHandle channelSource, IChannelHandle channel, BsonDocument commandResult)\r\n   at MongoDB.Driver.Core.Operations.FindOperation`1.ExecuteAsync(RetryableReadContext context, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.Core.Operations.FindOperation`1.ExecuteAsync(IReadBinding binding, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.OperationExecutor.ExecuteReadOperationAsync[TResult](IReadBinding binding, IReadOperation`1 operation, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteReadOperationAsync[TResult](IClientSessionHandle session, IReadOperation`1 operation, ReadPreference readPreference, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.IAsyncCursorSourceExtensions.ToListAsync[TDocument](IAsyncCursorSource`1 source, CancellationToken cancellationToken)\r\n   at DemoMongoDb.API.Controllers.MongoDbController.Get() in C:\\Projects\\PT_Demo_MongoDB\\src\\PT_Demo_MongoDB\\DemoMongoDb.API\\Controllers\\MongoDbController.cs:line 29\r\n   at lambda_method5(Closure , Object )\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nConnection: keep-alive\r\nHost: localhost:7060\r\nUser-Agent: PostmanRuntime/7.36.0\r\nAccept-Encoding: gzip, deflate, br\r\nReferer: http://localhost:5225/MongoDb\r\nPostman-Token: ff789ab9-a6d7-46f1-a733-d45df3789ea8\r\n"
				}
			]
		},
		{
			"name": "Get By Id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url-http-app}}/MongoDb/{{student-id}}",
					"host": [
						"{{url-http-app}}"
					],
					"path": [
						"MongoDb",
						"{{student-id}}"
					]
				}
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url-http-app}}/MongoDb/659aedbd950d08b992520ec3",
							"host": [
								"{{url-http-app}}"
							],
							"path": [
								"MongoDb",
								"659aedbd950d08b992520ec3"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Sun, 07 Jan 2024 18:31:34 GMT"
						},
						{
							"key": "Server",
							"value": "Kestrel"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": {\n        \"timestamp\": 1704652221,\n        \"machine\": 9768200,\n        \"pid\": -18030,\n        \"increment\": 5377731,\n        \"creationTime\": \"2024-01-07T18:30:21Z\"\n    },\n    \"studentId\": \"659aedbd950d08b992520ec3\",\n    \"firstName\": \"Iggy\",\n    \"lastName\": \"Pop\",\n    \"age\": 77,\n    \"city\": \"Los Angeles\"\n}"
				},
				{
					"name": "404 NotFound",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url-http-app}}/MongoDb/659aa2f7b3381ec552e6cb25",
							"host": [
								"{{url-http-app}}"
							],
							"path": [
								"MongoDb",
								"659aa2f7b3381ec552e6cb25"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/problem+json; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Sun, 07 Jan 2024 14:32:53 GMT"
						},
						{
							"key": "Server",
							"value": "Kestrel"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.4\",\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"traceId\": \"00-c53803909b84372f867dcaedcc4d8fc4-058fc092111ebc7e-00\"\n}"
				}
			]
		},
		{
			"name": "Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"var studentId = jsonData.studentId != null ? jsonData.studentId : jsonData.error;\r",
							"\r",
							"pm.collectionVariables.set(\"student-id\", studentId);\r",
							"// pm.environment.set(\"student-id\", studentId);\r",
							"// pm.globals.set(\"student-id\", studentId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"FirstName\": \"Michael\",\r\n    \"LastName\": \"Jordan\",\r\n    \"Age\": 52,\r\n    \"City\": \"Hawaii\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url-http-app}}/MongoDb",
					"host": [
						"{{url-http-app}}"
					],
					"path": [
						"MongoDb"
					]
				}
			},
			"response": [
				{
					"name": "201 Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"FirstName\": \"Elon\",\r\n    \"LastName\": \"Musk\",\r\n    \"Age\": 52,\r\n    \"City\": \"Hawaii\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url-http-app}}/MongoDb",
							"host": [
								"{{url-http-app}}"
							],
							"path": [
								"MongoDb"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Sun, 07 Jan 2024 18:33:56 GMT"
						},
						{
							"key": "Server",
							"value": "Kestrel"
						},
						{
							"key": "Location",
							"value": "https://localhost:7060/MongoDb/659aee91ff0cb07ba1f4a875"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": {\n        \"timestamp\": 1704652433,\n        \"machine\": 16714928,\n        \"pid\": 31649,\n        \"increment\": 16033909,\n        \"creationTime\": \"2024-01-07T18:33:53Z\"\n    },\n    \"studentId\": \"659aee91ff0cb07ba1f4a875\",\n    \"firstName\": \"Elon\",\n    \"lastName\": \"Musk\",\n    \"age\": 52,\n    \"city\": \"Hawaii\"\n}"
				},
				{
					"name": "400 Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"FirstName\": \"Elon\",\r\n    \"LastName\": \"Musk\",\r\n    \"Age\": 52,\r\n    \"City\": \"Hawaii\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url-http-app}}/MongoDb",
							"host": [
								"{{url-http-app}}"
							],
							"path": [
								"MongoDb"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/problem+json; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Sun, 07 Jan 2024 15:04:33 GMT"
						},
						{
							"key": "Server",
							"value": "Kestrel"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.1\",\n    \"title\": \"One or more validation errors occurred.\",\n    \"status\": 400,\n    \"traceId\": \"00-5ae99dfb53adcc939592b29c09afeae4-40c28911dc4d2b0a-00\",\n    \"errors\": {\n        \"StudentId\": [\n            \"The StudentId field is required.\"\n        ]\n    }\n}"
				}
			]
		},
		{
			"name": "Update",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"FirstName\": \"Michael\",\r\n    \"LastName\": \"Jackson\",\r\n    \"Age\": 666,\r\n    \"City\": \"Hell\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url-http-app}}/MongoDb/{{student-id}}",
					"host": [
						"{{url-http-app}}"
					],
					"path": [
						"MongoDb",
						"{{student-id}}"
					]
				}
			},
			"response": [
				{
					"name": "204 No Content",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"FirstName\": \"Bill\",\r\n    \"LastName\": \"Gates\",\r\n    \"Age\": 666,\r\n    \"City\": \"Hell\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url-http-app}}/MongoDb/659aee91ff0cb07ba1f4a875",
							"host": [
								"{{url-http-app}}"
							],
							"path": [
								"MongoDb",
								"659aee91ff0cb07ba1f4a875"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Date",
							"value": "Sun, 07 Jan 2024 18:35:12 GMT"
						},
						{
							"key": "Server",
							"value": "Kestrel"
						}
					],
					"cookie": [],
					"body": null
				},
				{
					"name": "500 Internal Server Error",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"FirstName\": \"Bill\",\r\n    \"LastName\": \"Gates\",\r\n    \"Age\": 666,\r\n    \"City\": \"Hell\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url-http-app}}/MongoDb/659aa2f7b3381ec552e6cb25",
							"host": [
								"{{url-http-app}}"
							],
							"path": [
								"MongoDb",
								"659aa2f7b3381ec552e6cb25"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Sun, 07 Jan 2024 13:13:20 GMT"
						},
						{
							"key": "Server",
							"value": "Kestrel"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "MongoDB.Driver.MongoWriteException: A write operation resulted in an error. WriteError: { Category : \"Uncategorized\", Code : 66, Message : \"After applying the update, the (immutable) field '_id' was found to have been altered to _id: ObjectId('000000000000000000000000')\" }.\r\n ---> MongoDB.Driver.MongoBulkWriteException`1[DemoMongoDb.API.Models.Student]: A bulk write operation resulted in one or more errors. WriteErrors: [ { Category : \"Uncategorized\", Code : 66, Message : \"After applying the update, the (immutable) field '_id' was found to have been altered to _id: ObjectId('000000000000000000000000')\" } ].\r\n   at MongoDB.Driver.MongoCollectionImpl`1.BulkWriteAsync(IClientSessionHandle session, IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.MongoCollectionBase`1.ReplaceOneAsync(FilterDefinition`1 filter, TDocument replacement, ReplaceOptions options, Func`3 bulkWriteAsync)\r\n   --- End of inner exception stack trace ---\r\n   at MongoDB.Driver.MongoCollectionBase`1.ReplaceOneAsync(FilterDefinition`1 filter, TDocument replacement, ReplaceOptions options, Func`3 bulkWriteAsync)\r\n   at DemoMongoDb.API.Controllers.MongoDbController.Update(String id, Student studentIn) in C:\\Projects\\PT_Demo_MongoDB\\src\\PT_Demo_MongoDB\\DemoMongoDb.API\\Controllers\\MongoDbController.cs:line 68\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nConnection: keep-alive\r\nHost: localhost:7060\r\nUser-Agent: PostmanRuntime/7.36.0\r\nAccept-Encoding: gzip, deflate, br\r\nContent-Type: application/json\r\nReferer: http://localhost:5225/MongoDb/659aa2f7b3381ec552e6cb25\r\nContent-Length: 93\r\nPostman-Token: dee8948b-1aa2-44ee-b91b-2c97ed6572b3\r\n"
				}
			]
		},
		{
			"name": "Delete",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url-http-app}}/MongoDb/{{student-id}}",
					"host": [
						"{{url-http-app}}"
					],
					"path": [
						"MongoDb",
						"{{student-id}}"
					]
				}
			},
			"response": [
				{
					"name": "204 No Content",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url-http-app}}/MongoDb/659aee91ff0cb07ba1f4a875",
							"host": [
								"{{url-http-app}}"
							],
							"path": [
								"MongoDb",
								"659aee91ff0cb07ba1f4a875"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Date",
							"value": "Sun, 07 Jan 2024 18:35:59 GMT"
						},
						{
							"key": "Server",
							"value": "Kestrel"
						}
					],
					"cookie": [],
					"body": null
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url-https-app",
			"value": "https://localhost:7060",
			"type": "string"
		},
		{
			"key": "url-http-app",
			"value": "http://localhost:5225",
			"type": "string"
		},
		{
			"key": "student-id",
			"value": "",
			"type": "string"
		}
	]
}